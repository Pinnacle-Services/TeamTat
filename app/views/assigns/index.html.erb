<% content_for :title, @project.name %>

<%= render partial: "/projects/project_header"%>
<%= render partial: "/projects/project_buttons" %> 
<%= render partial: "/projects/project_tab" %>

<div class="ui bottom attached active tab segment">
  <% if @documents.empty? || @users.empty? %>
    <div class="ui message info">
      <% if @documents.empty? && @users.empty? %>
        Please upload documents and add annotators in the project first.
      <% elsif @documents.empty? %>
        Please upload documents in 'Documents' tab.
      <% else %>
        Please add annotators in 'Member' tab.
      <% end %>
    </div>
  <% else %>
    <div class="ui  right aligned grid">
      <div class="page-info left floated left aligned eight wide column">
        <% if @project.round_begin? %>
          <div class='ui message warning'><i class='icon exclamation triangle'></i> You cannot change assignments after a round begins</div>
        <% end %>
      </div>
      <div class="right floated right aligned eight wide column">
        <button class='ui button primary disabled save-button'>Save</button>
        <button class='ui button olive disabled upload-button'>Upload</button>
        <button class='ui button teal disabled assign-randomly-button'>Random Assign</button>
        <button class='ui button red disabled clear-assigns-button'>Clear All</button>
      </div>
    </div>
    <div class="ui warning message need-save-message" style='display:none' >
      <i class="close icon"></i>
      Click 'Save' button to confirm your changes
    </div>
    <ul class='footnote'>
      <li>By clicking a circle in a cell, you can assign or unassign a document to an annotator.</li>
    </ul>
    <table class="ui table table-bordered celled assign-table">
      <thead>
        <tr>
          <th>Doc ID</th>
          <th>Title</th>
          <% @users.each do |user|%>
            <th style='text-align:center;'>          
              <%=image_tag(user.image_or_default, class: "ui avatar image", alt: user.name_and_email, data: {content: user.name_and_email}) %>
            </th>
          <% end %>
          <th style='text-align:center;'>#</th>
        </tr>
      </thead>

      <tbody>
        <% 
          popup_msg = if @project.round_begin? then "cannot change" else "click to change" end

          json_map = []
          json_user_map = {}
          json_document_map = {}
          document_idx = 0
          user_sum  = {}
          @users.each do |user|
            user_sum[user.id] = 0
          end
          @documents.each do |document| %>
            <% 
            done_cls = "done"
            found = false
            @users.each do |user|
              assign_task =  @assigns_map["#{document.id}-#{user.id}"]
              if assign_task.present?
                found = true
              end
              if assign_task.present? && !assign_task.done
                done_cls = ""
              end
            end
            done_cls = "" if !found 
            %>
          <tr class='assign-row <%=done_cls%>' data-did='<%=document.id%>'>
            <%
            json_map_item = []
            user_idx = 0
            sum = 0
            done_count = 0
            %>
            <td><%= link_to document.did, document %></td>
            <td class="ellipsis w300"><%=document.title %></td>
            <% @users.each do |user|%>
              <%
              if document_idx == 0 
                json_user_map["#{user.id}"] = user_idx
              end
              %>
              <td style='text-align:center;'>          
                <%
                assign_task =  @assigns_map["#{document.id}-#{user.id}"]
                cls = 'not-assigned'
                if assign_task.present?
                  cls = if assign_task.done then 'done assigned' else 'assigned' end
                  sum += 1
                  user_sum[user.id] += 1
                end
                state = if assign_task.present? then 'on' else 'off' end

                %>
                <% json_map_item << assign_task.present?  %>
                <div id="btn-<%=document_idx%>-<%=user_idx%>" class='assign-button <%= cls%> need-popup' data-did='<%=document.id%>' data-uid='<%=user.id%>' data-aid='<%=assign_task.id if assign_task.present? %>' data-state='<%=state%>' data-content='<%= popup_msg %>' >
                  <i class='icon check circle'></i>
                  <i class='circle outline icon'></i>
                  <i class='icon circle'></i>
                </div>
              </td>
              <%               
              user_idx += 1
              %>
            <% end %>
            <td data-did='<%=document.id%>' class='sum row row-<%=document.id%>'><%= sum %></td>
          </tr>
          <%
            json_document_map["#{document.id}"] = document_idx
            json_map << json_map_item
            document_idx += 1
          %>
        <% end %>
      </tbody>
      <tfoot>
        <th colspan=2 class='sum'><%=@documents.size%> documents</th>
        <% @users.each do |user| %>
          <th data-uid='<%=user.id%>' class='sum col col-<%=user.id%>'><%=user_sum[user.id]%></th>
        <% end %>
        <th class='sum total'>0</th>
      </tfoot>
    </table>
    <ul class='footnote'>
      <li>By clicking a circle in a cell, you can assign or unassign a document to an annotator.</li>
    </ul>
  <br>
  <% end %>
</div>

<div class="ui modal" id="uploadModal">
  <i class="close icon"></i>
  <div class="header">
    Upload Preassigned Annotator File
  </div>
  <div class="content">
    <div>
      Check the sample file below for data format 
      <ul>
        <li>
          <%=link_to download_project_assigns_path(@project) do %>
            <i class="download icon"></i> Sample Assign File
          <% end %>
        </li>
      </ul>
    </div>

    <%= form_tag(upload_project_assigns_path(@project), method: "POST", multipart: true, id: "uploadFileForm", class:"ui form") do %>
      <div class="field">
        <input type="file" name="file">
      </div>
    <% end %>
  </div>
  <div class="actions">
    <div class="ui deny button">
      Cancel
    </div>
    <div class="ui positive button">
      Upload
    </div>
  </div>
</div>
<script>
<%= content_for :defer_js do -%>
<% if !@documents.empty? && !@users.empty? %>

  var assignMap;
  var documentMap;
  var userMap;
  var rowSum=[], colSum=[], totalSum = 0;
  var xMax;
  var yMax;
  

  var dirtyFlag = false;
  $(function() {
    $('#main-loader').addClass('active');
    $('#main-loader .text.loader').text('Loading...');
    setTimeout(function() {
      assignMap = JSON.parse('<%=raw json_map.to_json %>');
      documentMap = JSON.parse('<%=raw json_document_map.to_json %>');
      userMap = JSON.parse('<%=raw json_user_map.to_json %>');
      xMax = assignMap.length > 0 ? assignMap[0].length : 0;
      yMax = assignMap.length;

      $('.ui.avatar.image').popup();

      $('.assign-button').click(function(e) {
        <% if @project.round_begin? %>
        <% else %>
          toggleAssignMap(e.currentTarget);
        <% end %>
      });
      $('.clear-assigns-button').click(clearAssign);
      $('.upload-button').click(function() {
        $('#uploadModal').modal({
          onApprove: function() {
            $("#uploadFileForm").submit();
          }
        }).modal('show');
      });
      $('.assign-randomly-button').click(assignRandomly);
      $('.save-button').click(save);
      $(window).on('beforeunload', function(){
        if (dirtyFlag) {
          return "Are you sure you want to discard the changes?";
        }
      });
      recalculateSumAll();
      <% if @project.status == "preparing" %>
        $('.upload-button').removeClass('disabled');
        $('.assign-randomly-button').removeClass('disabled');
      <% end %>
      clearDirty();

      $('#main-loader').removeClass('active');
      $('#main-loader .text.loader').text('Loading...');
    }, 1);
  });

  function toggleButton(e, state) {
      var $e = $(e);

      if (state == 'on') {
        $e.data('state', 'on');
        $e.removeClass('not-assigned').addClass('assigned');
      } else {
    <% if @project.status != "preparing" %>
        if (confirm('Are you sure to unassign existing task?')) {
    <% end %>
          $e.data('state', 'off');
          $e.removeClass('assigned').addClass('not-assigned');
    <% if @project.status != "preparing" %>
        }
    <% end %>
      }
      makeDirty();
  }

  function makeDirty() {
    dirtyFlag = true;
    $('.need-save-message').show();
    $('.save-button').removeClass('disabled');
  }

  function clearDirty() {
    dirtyFlag = false;
    $('.need-save-message').hide();
    $('.save-button').addClass('disabled');
  }

  function toggleAssignMap(e, noChangeDOM) {
    var $e = $(e);
    var did = $e.data('did');
    var uid = $e.data('uid');      
    var dIdx = documentMap[did];
    var uIdx = userMap[uid];
    assignMap[dIdx][uIdx] = !assignMap[dIdx][uIdx];
    toggleButton(e, assignMap[dIdx][uIdx] ? "on" : "off");

    if (assignMap[dIdx][uIdx]) {
      rowSum[dIdx]++;
      colSum[uIdx]++;
      totalSum++;
    } else {
      rowSum[dIdx]--;
      colSum[uIdx]--;
      totalSum--;
    }

    if (noChangeDOM) {
      return;
    }

    $(".row-" + did)[0].innerText = rowSum[dIdx];
    $(".col-" + uid)[0].innerText = colSum[uIdx];
    $(".sum.total")[0].innerText = totalSum;

    <% if @project.status == "preparing" %>
      $('.clear-assigns-button').toggleClass('disabled', $(".assigned.assign-button").length == 0);
    <% end %>
  }

  function clearAllAssignMap() {
    for(var y = 0; y < yMax; y++) {
      for(var x = 0; x < xMax; x++) {
        assignMap[y][x] = false;
      }
    }
  }
  function recalculateAssignMap() {
    totalSum = 0;
    var x, y;
    for (y = 0; y < yMax; y++) {
      rowSum[y] = 0;
    }
    for(x = 0; x < xMax; x++) {
      colSum[x] = 0;
    }
    for (y = 0; y < yMax; y++) { 
      for(x = 0; x < xMax; x++) {
        if (assignMap[y][x]) {
          colSum[x]++;
          rowSum[y]++;
          totalSum++;
        }
      }
    }
  }

  function recalculateSumAll() {
    recalculateAssignMap();
    var rows = $(".row");
    for (y = 0; y < yMax; y++) {
      rows[y].innerText = rowSum[y];
    }
    var cols = $(".col");
    for(x = 0; x < xMax; x++) {
      cols[x].innerText = colSum[x];
    }
    <% if @project.status == "preparing" %>
      $('.clear-assigns-button').toggleClass('disabled', $(".assigned.assign-button").length == 0);
    <% end %>
    $(".sum.total")[0].innerText = totalSum;
  }

  function clearAssign() {
    if (confirm("Are you sure to clear all?")) {
      $('#main-loader').addClass('active');
      $('#main-loader .text.loader').text('Clearing...');
      setTimeout(function() {
        $('.assign-button').removeClass('assigned').addClass('not-assigned').data('state', 'off');
        clearAllAssignMap();
        recalculateSumAll();
        makeDirty();
        $('#main-loader').removeClass('active');
        $('#main-loader .text.loader').text('Loading...');
      }, 1);
    }
  }

  function assignRandomly() {
    var cntUser = $('.sum.col').length;
    var cntDoc = $('.sum.row').length;
    var perDoc = parseInt(prompt('How many annotators do you want to assign per a document (1 to ' + cntUser + ')?'), "Title");
    var perUser = Math.ceil(perDoc * cntDoc / cntUser);
    var x, y, i, u;
    if (!(perDoc >=1 && perDoc <= cntUser)) {
      alert('Please enter number between 1 to ' + cntUser);
      return;
    }
    $('#main-loader').addClass('active');
    $('#main-loader .text.loader').text('Assigning...');
    setTimeout(function() {
      $('.assign-button').removeClass('assigned').addClass('not-assigned').data('state', 'off');
      clearAllAssignMap();
      for (y = 0; y < yMax; y++) {
        rowSum[y] = 0;
      }
      for(x = 0; x < xMax; x++) {
        colSum[x] = 0;
      }
      var availableUsers = [], doneUsers = [];
      for(y = 0; y < yMax; y++) {
        availableUsers = [];
        for(x = 0; x < xMax; x++) {
          if (colSum[x] <= perUser) {
            availableUsers.push(x);     
          } else {
            doneUsers.push(x);
          }
        }
        availableUsers = _.shuffle(availableUsers);
        doneUsers = _.shuffle(doneUsers);
        for (i = 0; i < perDoc; i++) {
          u = availableUsers[i];
          if (u == undefined) {
            u = doneUsers.pop();
          }
          toggleAssignMap($("#btn-" + y + "-" + u), "No Update");
        }
      }
      recalculateSumAll();
      makeDirty();
      $('#main-loader').removeClass('active');
      $('#main-loader .text.loader').text('Loading...');
    }, 1);


  }

  function save() {
    var url = '<%= project_assigns_path(@project, format: 'json') %>';
    var data = _.map($('.assign-button.assigned'), function(e) {
      return $(e).data('did') + '-' + $(e).data('uid');
    });
    $('#main-loader').addClass('active');
    $('#main-loader .text.loader').text('Saving...');

    $.ajax({
      method: 'POST',
      url: url, 
      data: {list: data},
      beforeSend: function(xhr) {
        xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
        // xhr.setRequestHeader('Content-Type', 'application/json');
      },
      success: function(data) {
        toastr.success('Successfully updated.');
        clearDirty();
        $("#projectButtonArea").load("<%= buttons_project_path(@project, format: 'html') %>", function() {
          $('#projectButtonArea .dropdown').dropdown();
        });
        update_project_tab_header(data.project);
      },
      error: function(err) {
        console.error(err);
        toastr.error(err.responseText || err); 
      }, 
      complete: function() {
        $('#main-loader .text.loader').text('Loading...');
        $('#main-loader').removeClass('active');
      }
    });
  }
<% end %>
<%- end -%>
</script>
